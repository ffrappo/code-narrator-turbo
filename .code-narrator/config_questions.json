{"question1":"From the folder & file structure define for the project file, source path (where code is located), documentation folder path, test folder path. \n        DO NOT makeup value for JSON property \n        Return JSON scheme\n        {\n        project_file: string,\n        source_path: string,\n        documentation_path: string\n        test_path: string\n        }\n        Folders structure and files in root folder are\n        ###\n        .code-narrator-turbo\n.env\n.git\n.github\n.gitignore\n.idea\nclassic\ncode-narrator-turbo.config2.js\ndist\ndocs\nGemfile\nGemfile.lock\ngulpfile.js\njest.config.js\nnode_modules\npackage-lock.json\npackage.json\nREADME.md\nsrc\ntsconfig.json\n_config.yml\n__tests__\n        ###\n        ","question2":"Following is the project file (package.json). \nFrom the file determine the project name, entry file, cli file, repository url.\n\n        ### project file starts ###\n        {\n  \"name\": \"code-narrator-turbo\",\n  \"version\": \"1.0.6\",\n  \"description\": \"Uses OpenAI to generate documentation on code and tests. It is self documenting tool and should be validation of the documentation working, similar to a compiler compiling it self. Use code-narrator-turbo.config.ts file to set the configuration for your project, such as project path, doc, documentation type and more. The package can be install using 'npm i code-narrator-turbo -D'\",\n  \"keywords\": [\n    \"documentation\",\n    \"openai\",\n    \"autodoc\"\n  ],\n  \"homepage\": \"https://github.com/ffrappo/code-narrator-turbo\",\n  \"bugs\": {\n    \"url\": \"https://github.com/ffrappo/code-narrator-turbo/issues\"\n  },\n  \"repository\": {\n    \"url\": \"https://github.com/ffrappo/code-narrator-turbo\"\n  },\n  \"bin\": {\n    \"code-narrator-turbo-cli\": \"./dist/src/cli.js\"\n  },\n  \"readme\": \"./docs/ReadMe.md\",\n  \"scripts\": {\n    \"compile\": \"tsc\",\n    \"build\": \"npm run compile && gulp\",\n    \"start\": \"npx ts-node .\\\\src\\\\cli.ts\"\n  },\n  \"author\": \"Ingi Gauti Ragnarsson @ingig\",\n  \"license\": \"ISC\",\n  \"main\": \"./dist/src/App.js\",\n  \"types\": \"./dist/App.d.ts\",\n  \"files\": [\n    \"./dist\"\n  ],\n  \"dependencies\": {\n    \"@types/jsonpath\": \"^0.2.0\",\n    \"@types/multimatch\": \"^4.0.0\",\n    \"asynckit\": \"^0.4.0\",\n    \"axios\": \"^0.26.1\",\n    \"combined-stream\": \"^1.0.8\",\n    \"delayed-stream\": \"^1.0.0\",\n    \"dotenv\": \"^16.0.3\",\n    \"extract-json-from-string\": \"^1.0.1\",\n    \"fast-glob\": \"^3.2.12\",\n    \"follow-redirects\": \"^1.15.2\",\n    \"form-data\": \"^4.0.0\",\n    \"fs-extra\": \"^11.1.1\",\n    \"gulp-sourcemaps\": \"^3.0.0\",\n    \"ignore\": \"^5.2.4\",\n    \"jsonpath\": \"^1.1.1\",\n    \"liquidjs\": \"^10.7.0\",\n    \"mime-db\": \"^1.52.0\",\n    \"mime-types\": \"^2.1.35\",\n    \"multimatch\": \"^6.0.0\",\n    \"openai\": \"^3.1.0\",\n    \"yargs\": \"^17.7.1\"\n  },\n  \"devDependencies\": {\n    \"@babel/preset-typescript\": \"^7.21.0\",\n    \"@jest/globals\": \"^29.5.0\",\n    \"@types/jest\": \"^29.4.0\",\n    \"@types/node\": \"^18.11.19\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-copy\": \"^4.0.1\",\n    \"gulp-typescript\": \"^6.0.0-alpha.1\",\n    \"jest\": \"^29.4.2\",\n    \"ts-jest\": \"^29.0.5\",\n    \"ts-node\": \"^10.9.1\",\n    \"typescript\": \"^4.9.5\"\n  }\n}\n\n        ### project file ends ###       \n         \nFrom project name, try to identify app-specific config files from the file list.\nThis does NOT include project config files(e.g. package.json), environment files or configs for dependencies. \nThe app-specific config file should be something like project_name.config, project_name.json, project_name.xml. \nDO NOT makeup value for JSON property, set the value as empty if you cannot determine it\n           \n        ### folders and files starts ###\n        .code-narrator-turbo\n.env\n.git\n.github\n.gitignore\n.idea\nclassic\ncode-narrator-turbo.config2.js\ndist\ndocs\nGemfile\nGemfile.lock\ngulpfile.js\njest.config.js\nnode_modules\npackage-lock.json\npackage.json\nREADME.md\nsrc\ntsconfig.json\n_config.yml\n__tests__\n        ### folders and files ends ###\n        \n        Return json \n        {\n        project_name: string,\n        entry_file: string,\n        cli_file: string,\n        config_files: string[]\n        repository_url : string\n        }\n        "}